name: Deploy Next.js site to GitHub Pages

on:
  # mainブランチへのプッシュ時に実行
  push:
    branches: ["main"]
  # Actionsタブから手動で実行も可能にする
  workflow_dispatch:

# GITHUB_TOKENのパーミッションを設定して、ActionsがGitHub Pagesにデプロイできるようにする
permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行の設定（同じグループのジョブは1つだけ実行されるようにして、古いジョブをキャンセルする）
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # リポジトリのコードをチェックアウト

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Node.js環境をセットアップ
        with:
          node-version: "20" # プロジェクトで使用しているNode.jsのバージョンに合わせてください
          cache: 'npm' # npmのキャッシュを利用 (yarnの場合は 'yarn')

      - name: Install dependencies
        run: npm ci # 依存関係をインストール (yarnの場合は yarn install --frozen-lockfile)

      - name: Build with Next.js
        run: npm run build # Next.jsサイトをビルド (next.config.mjsのoutput: 'export'によりoutディレクトリが生成される)

      - name: Create .nojekyll file
        run: touch ./out/.nojekyll # GitHub PagesがJekyllを無効にするために必要

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # ビルドされたサイト(outディレクトリ)をアーティファクトとしてアップロード
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # デプロイ先のURL
    runs-on: ubuntu-latest
    needs: build # buildジョブの完了後に実行
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # アーティファクトをGitHub Pagesにデプロイ
        